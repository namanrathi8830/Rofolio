import { useState } from "react";
import { cn } from "../lib/utils";
import { Calendar, Clock, Tag, ChevronRight } from "lucide-react";

interface BlogPost {
  id: string;
  title: string;
  excerpt: string;
  content: string;
  date: string;
  readTime: string;
  category: string;
  tags: string[];
  image: string;
  featured: boolean;
}

const Blog = () => {
  const [activeCategory, setActiveCategory] = useState<string>("all");
  const [selectedPost, setSelectedPost] = useState<BlogPost | null>(null);

  const blogPosts: BlogPost[] = [
    {
      id: "1",
      title: "Introduction to YOLOv9: Advancements in Object Detection",
      excerpt:
        "Exploring the latest improvements in YOLOv9 and how they enhance object detection accuracy and efficiency.",
      content:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.",
      date: "June 15, 2023",
      readTime: "8 min read",
      category: "Machine Learning",
      tags: ["Computer Vision", "Object Detection", "YOLOv9", "Deep Learning"],
      image:
        "https://images.unsplash.com/photo-1620712943543-bcc4688e7485?w=800&q=80",
      featured: true,
    },
    {
      id: "2",
      title: "Building Interactive Dashboards with Tableau",
      excerpt:
        "A step-by-step guide to creating effective and interactive dashboards using Tableau for business intelligence.",
      content:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.",
      date: "May 22, 2023",
      readTime: "6 min read",
      category: "Data Visualization",
      tags: ["Tableau", "Dashboard", "Business Intelligence", "Data Analysis"],
      image:
        "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&q=80",
      featured: true,
    },
    {
      id: "3",
      title: "The Future of Web Development: React Server Components",
      excerpt:
        "Exploring how React Server Components are changing the landscape of web development and improving performance.",
      content:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.",
      date: "April 10, 2023",
      readTime: "5 min read",
      category: "Web Development",
      tags: ["React", "Server Components", "JavaScript", "Performance"],
      image:
        "https://images.unsplash.com/photo-1633356122102-3fe601e05bd2?w=800&q=80",
      featured: false,
    },
    {
      id: "4",
      title: "Optimizing Machine Learning Models for Production",
      excerpt:
        "Best practices for deploying and optimizing machine learning models in production environments.",
      content:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.",
      date: "March 5, 2023",
      readTime: "7 min read",
      category: "Machine Learning",
      tags: ["MLOps", "Deployment", "Optimization", "Production"],
      image:
        "https://images.unsplash.com/photo-1591696205602-2f950c417cb9?w=800&q=80",
      featured: false,
    },
    {
      id: "5",
      title: "Data Cleaning Techniques for Better Analysis",
      excerpt:
        "Essential data cleaning techniques to ensure your data analysis and machine learning models are accurate and reliable.",
      content:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.",
      date: "February 18, 2023",
      readTime: "9 min read",
      category: "Data Science",
      tags: ["Data Cleaning", "Data Preparation", "Python", "Pandas"],
      image:
        "https://images.unsplash.com/photo-1599658880436-c61792e70672?w=800&q=80",
      featured: false,
    },
    {
      id: "6",
      title: "Creating Responsive UIs with Tailwind CSS",
      excerpt:
        "How to leverage Tailwind CSS to build beautiful, responsive user interfaces quickly and efficiently.",
      content:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.",
      date: "January 30, 2023",
      readTime: "4 min read",
      category: "Web Development",
      tags: ["Tailwind CSS", "Responsive Design", "CSS", "Frontend"],
      image:
        "https://images.unsplash.com/photo-1555066931-4365d14bab8c?w=800&q=80",
      featured: false,
    },
  ];

  const categories = [
    "all",
    ...Array.from(new Set(blogPosts.map((post) => post.category))),
  ];

  const filteredPosts = blogPosts.filter(
    (post) => activeCategory === "all" || post.category === activeCategory,
  );

  const featuredPosts = blogPosts.filter((post) => post.featured);

  return (
    <section className="w-full min-h-screen bg-background py-20 px-4 md:px-8 lg:px-16">
      <div className="max-w-6xl mx-auto">
        <h2 className="text-4xl md:text-5xl font-bold mb-8 text-center">
          Blog
        </h2>

        <p className="text-center text-muted-foreground max-w-3xl mx-auto mb-12">
          Insights, tutorials, and thoughts on data science, web development,
          and technology trends. Stay updated with my latest articles and
          projects.
        </p>

        {selectedPost ? (
          // Blog Post Detail View
          <div className="bg-card rounded-xl shadow-lg overflow-hidden">
            <div className="relative aspect-[21/9] w-full overflow-hidden">
              <img
                src={selectedPost.image}
                alt={selectedPost.title}
                className="w-full h-full object-cover"
              />
              <button
                onClick={() => setSelectedPost(null)}
                className="absolute top-4 left-4 bg-black/50 text-white px-4 py-2 rounded-full backdrop-blur-sm hover:bg-black/70 transition-colors"
              >
                Back to Blog
              </button>
            </div>

            <div className="p-6 md:p-8">
              <div className="flex flex-wrap gap-2 mb-4">
                <span className="px-3 py-1 bg-primary/10 text-primary rounded-full text-xs font-medium">
                  {selectedPost.category}
                </span>
                {selectedPost.tags.map((tag, index) => (
                  <span
                    key={index}
                    className="px-3 py-1 bg-muted rounded-full text-xs font-medium"
                  >
                    {tag}
                  </span>
                ))}
              </div>

              <h1 className="text-2xl md:text-3xl lg:text-4xl font-bold mb-4">
                {selectedPost.title}
              </h1>

              <div className="flex items-center gap-4 text-sm text-muted-foreground mb-6">
                <div className="flex items-center gap-1">
                  <Calendar className="h-4 w-4" />
                  {selectedPost.date}
                </div>
                <div className="flex items-center gap-1">
                  <Clock className="h-4 w-4" />
                  {selectedPost.readTime}
                </div>
              </div>

              <div className="prose prose-lg max-w-none">
                <p className="text-lg font-medium mb-4">
                  {selectedPost.excerpt}
                </p>
                <p>{selectedPost.content}</p>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed
                  euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl,
                  vel aliquam nisl nisl vel nisl. Sed euismod, nisl vel
                  ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl
                  nisl vel nisl.
                </p>
                <h2>Key Takeaways</h2>
                <ul>
                  <li>Important point one about the topic</li>
                  <li>Critical insight about implementation details</li>
                  <li>Future directions and potential applications</li>
                  <li>Resources for further learning and exploration</li>
                </ul>
                <p>
                  Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam
                  nisl, vel aliquam nisl nisl vel nisl. Sed euismod, nisl vel
                  ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl
                  nisl vel nisl.
                </p>
              </div>
            </div>
          </div>
        ) : (
          // Blog List View
          <>
            {/* Featured Posts */}
            {activeCategory === "all" && (
              <div className="mb-16">
                <h3 className="text-2xl font-bold mb-6">Featured Articles</h3>
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                  {featuredPosts.map((post) => (
                    <div
                      key={post.id}
                      className="bg-card rounded-xl overflow-hidden shadow-lg group hover:shadow-xl transition-all duration-300 cursor-pointer"
                      onClick={() => setSelectedPost(post)}
                    >
                      <div className="relative aspect-video overflow-hidden">
                        <img
                          src={post.image}
                          alt={post.title}
                          className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                        />
                        <div className="absolute top-4 left-4">
                          <span className="px-3 py-1 bg-primary text-primary-foreground rounded-full text-xs font-medium">
                            {post.category}
                          </span>
                        </div>
                      </div>
                      <div className="p-6">
                        <div className="flex items-center gap-4 text-sm text-muted-foreground mb-3">
                          <div className="flex items-center gap-1">
                            <Calendar className="h-4 w-4" />
                            {post.date}
                          </div>
                          <div className="flex items-center gap-1">
                            <Clock className="h-4 w-4" />
                            {post.readTime}
                          </div>
                        </div>
                        <h4 className="text-xl font-bold mb-2 group-hover:text-primary transition-colors">
                          {post.title}
                        </h4>
                        <p className="text-muted-foreground mb-4">
                          {post.excerpt}
                        </p>
                        <button className="flex items-center text-primary font-medium group-hover:underline">
                          Read More <ChevronRight className="h-4 w-4 ml-1" />
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Category Filter */}
            <div className="flex flex-wrap justify-center gap-2 mb-12">
              {categories.map((category) => (
                <button
                  key={category}
                  onClick={() => setActiveCategory(category)}
                  className={cn(
                    "px-4 py-2 rounded-full text-sm font-medium transition-colors",
                    activeCategory === category
                      ? "bg-primary text-primary-foreground"
                      : "bg-card hover:bg-card/80",
                  )}
                >
                  {category === "all" ? "All Posts" : category}
                </button>
              ))}
            </div>

            {/* Blog Posts Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {filteredPosts.map((post) => (
                <div
                  key={post.id}
                  className="bg-card rounded-xl overflow-hidden shadow-lg group hover:shadow-xl transition-all duration-300 hover:-translate-y-1 cursor-pointer"
                  onClick={() => setSelectedPost(post)}
                >
                  <div className="relative aspect-video overflow-hidden">
                    <img
                      src={post.image}
                      alt={post.title}
                      className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                    />
                    <div className="absolute top-3 left-3">
                      <span className="px-2 py-1 bg-primary/90 text-primary-foreground rounded-full text-xs font-medium">
                        {post.category}
                      </span>
                    </div>
                  </div>
                  <div className="p-4">
                    <div className="flex items-center gap-3 text-xs text-muted-foreground mb-2">
                      <div className="flex items-center gap-1">
                        <Calendar className="h-3 w-3" />
                        {post.date}
                      </div>
                      <div className="flex items-center gap-1">
                        <Clock className="h-3 w-3" />
                        {post.readTime}
                      </div>
                    </div>
                    <h4 className="text-lg font-bold mb-2 line-clamp-2 group-hover:text-primary transition-colors">
                      {post.title}
                    </h4>
                    <p className="text-muted-foreground text-sm mb-3 line-clamp-2">
                      {post.excerpt}
                    </p>
                    <div className="flex flex-wrap gap-1 mb-3">
                      {post.tags.slice(0, 2).map((tag, index) => (
                        <span
                          key={index}
                          className="flex items-center gap-1 px-2 py-0.5 bg-muted rounded-full text-xs font-medium"
                        >
                          <Tag className="h-3 w-3" />
                          {tag}
                        </span>
                      ))}
                      {post.tags.length > 2 && (
                        <span className="px-2 py-0.5 bg-muted rounded-full text-xs font-medium">
                          +{post.tags.length - 2}
                        </span>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Blog;


// src/components/Blog.tsx

import { useEffect } from "react";

const Blog = () => {
  useEffect(() => {
    // Redirect to the Framer "Blog" section or full site
    window.location.href = "https://rofolioblogs.framer.website/";
  }, []);

  return (
    <div className="w-full h-screen flex items-center justify-center">
      <p className="text-lg text-muted-foreground">Redirecting to Blog...</p>
    </div>
  );
};

export default Blog;


